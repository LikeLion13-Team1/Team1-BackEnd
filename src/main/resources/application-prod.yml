spring:
  datasource:
    driver-class-name: ${DB_DRIVER_CLASS_NAME} # MySQL JDBC 드라이버 클래스 이름
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    database: mysql # 사용할 DB 유형 지정 (MySQL)
    database-platform: ${JPA_DATABASE_PLATFORM} # Hibernate에서 사용할 MySQL 방언(dialect) 지정
    show-sql: false # 실행된 SQL 쿼리를 콘솔에 출력할지 여부
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO} # 애플리케이션 실행 시 DB 스키마의 상태 설정
    properties:
      hibernate:
        format_sql: ${JPA_FORMAT_SQL} # 출력되는 SQL 쿼리를 보기 좋게 포맷팅

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}

  jwt:
    secret: ${JWT_SECRET}
    token:
      access-expiration-time: ${JWT_ACCESS_EXPIRATION_TIME}
      refresh-expiration-time: ${JWT_REFRESH_EXPIRATION_TIME}

  security:
    oauth2:
      client:
        registration:
          kakao:
            authorization-grant-type: ${KAKAO_AUTHORIZATION_GRANT_TYPE}
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-authentication-method: ${KAKAO_AUTHENTICATION_METHOD}
            scope:
              - profile_nickname
              - profile_image
              - profile_email
        provider:
          kakao:
            authorization-uri: ${KAKAO_AUTHORIZATION_URI}
            token-uri: ${KAKAO_TOKEN_URI}
            user-info-uri: ${KAKAO_USER_INFO_URI}
            user-name-attribute: ${KAKAO_USER_NAME_ATTRIBUTE}

  mail:
    host: smtp.naver.com
    port: 465 # 네이버 표준 port번호 , 구글은 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.ssl.enable: true
      mail.smtp.ssl.trust: smtp.naver.com